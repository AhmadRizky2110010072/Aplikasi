/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTextArea;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author user
 */
public class Pembayaran extends javax.swing.JFrame {

    Connection con;
    ResultSet rs;
    PreparedStatement pst;
    JTextArea TextAreaReport = new JTextArea();  // Inisialisasi JTextArea

    
    public Pembayaran() {
        initComponents();
        setLocationRelativeTo(null);
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_pendaftaransiswa", "root", "");
        
        String sql = "SELECT * FROM transaksi";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();
        
        while (rs.next()){
         // menampilkan data pendaftaran ke table
         String idpembayaran = String.valueOf(rs.getString("idpembayaran"));
         String nis = String.valueOf(rs.getString("nis"));
         String nama = String.valueOf(rs.getString("nama"));
         String biayamasuk = String.valueOf(rs.getString("biayamasuk"));
         String uangpangkal = String.valueOf(rs.getString("uangpangkal"));
         
         
         String tbtransaksi[] = {idpembayaran, nis, nama, biayamasuk, uangpangkal, };
         DefaultTableModel tampilModel = (DefaultTableModel) tbltransaksi.getModel();

         tampilModel.addRow(tbtransaksi);
         }
                
     } catch (ClassNotFoundException ex) {
            Logger.getLogger(Pendaftaran.class.getName()).log(Level.SEVERE, "MySQL JDBC Driver not found", ex);
        } catch (SQLException ex) {
            Logger.getLogger(Pendaftaran.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e){
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NAMA = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfNis = new javax.swing.JTextField();
        tfNama = new javax.swing.JTextField();
        tfBiaya = new javax.swing.JTextField();
        tfUang = new javax.swing.JTextField();
        btnUbah = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltransaksi = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("PEMBAYARAN");

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(292, 292, 292)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnExit))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 51));

        jLabel2.setText("ID PEMBAYARAN");

        jLabel3.setText("NIS");

        NAMA.setText("NAMA");

        jLabel5.setText("BIAYA MASUK");

        jLabel6.setText("UANG PANGKAL");

        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ubah.png"))); // NOI18N
        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText("TAMBAH");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tbltransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID PEMBAYARAN", "NIS", "NAMA", "BIAYA MASUK", "UANG PANGKAL"
            }
        ));
        tbltransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbltransaksi);

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Clear.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Export.png"))); // NOI18N
        btnExport.setText("EXPORT");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Import.png"))); // NOI18N
        btnImport.setText("IMPORT");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NAMA, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel6))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfId, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                            .addComponent(tfNis)
                            .addComponent(tfUang)
                            .addComponent(tfNama)
                            .addComponent(tfBiaya, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUbah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btnExport)
                        .addGap(33, 33, 33)
                        .addComponent(btnImport)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NAMA))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfUang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnUbah)
                            .addComponent(btnHapus)
                            .addComponent(btnClear)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnExport)
                            .addComponent(btnImport))))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        //Mengecek nilai yang di input
        if (tfId.getText().equals("") || tfNis.getText().equals("") || 
        tfNama.getText().equals("") || tfBiaya.getText().equals("") || tfUang.getText().equals("" )){
    JOptionPane.showMessageDialog(null, "Lengkapi Data Yang Kosong..!",
            "Error", JOptionPane.WARNING_MESSAGE);
} else {
    // Pemeriksaan ID tidak boleh sama
    boolean IDSudahAda = false;
    DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        if (tfId.getText().equals(model.getValueAt(i, 0))) {
            IDSudahAda = true;
            break;
        }
    }

    if (IDSudahAda) {
        JOptionPane.showMessageDialog(null, "ID sudah terdaftar, masukkan ID yang berbeda",
                "Error", JOptionPane.WARNING_MESSAGE);
        tfId.requestFocus();
    } else {
        //Membuat koneksi agar dapat memanipulasi data Pendaftaran pada Database    
        try {
            pst = con.prepareStatement("INSERT into transaksi (idpembayaran, nis, nama, biayamasuk, uangpangkal) values(?,?,?,?,?)");
            int idpembayaran = Integer.parseInt(tfId.getText());
            pst.setString(1, tfId.getText());
            pst.setString(2, tfNis.getText());
            pst.setString(3, tfNama.getText());
            pst.setString(4, tfBiaya.getText());
            pst.setString(5, tfUang.getText());
            pst.executeUpdate();

            // Menambahkan data ke dalam row
            model.addRow(new Object[]{tfId.getText(), tfNis.getText(), tfNama.getText(),
                   tfBiaya.getText() , tfUang.getText()});

            JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan");
        } catch (SQLException ex) {
            Logger.getLogger(Pembayaran.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menambahkan data ke database",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            //Membersihkan field setelah data berhasil terinput
            tfId.setText("");
            tfNis.setText("");
            tfNama.setText("");
            tfBiaya.setText("");
            tfUang.setText("");
        }
    }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void tbltransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltransaksiMouseClicked
        //TAMPIL        
        int selectedRow = tbltransaksi.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();
        tfId.setText(model.getValueAt(selectedRow, 0).toString());
        tfNis.setText(model.getValueAt(selectedRow, 1).toString());
        tfNama.setText(model.getValueAt(selectedRow, 2).toString());
        tfBiaya.setText(model.getValueAt(selectedRow, 3).toString());
        tfUang.setText(model.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_tbltransaksiMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        if (tfId.getText().equals("") || tfNis.getText().equals("") || 
            tfNama.getText().equals("") || tfBiaya.getText().equals("") || tfUang.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Lengkapi Data Yang Kosong..!",
            "Error", JOptionPane.WARNING_MESSAGE);
        }else{
    
        
        //Konfirmasi ubah data  
        int ubah = JOptionPane.showConfirmDialog(null, "Anda yakin mengubah data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
                if (ubah == JOptionPane.YES_OPTION) {

            try {
            // Mengubah data dalam database
            pst = con.prepareStatement("UPDATE transaksi SET idpembayaran=?, nis=?, nama=?, biayamasuk=?, uangpangkal=? WHERE idpembayaran=?");
            pst.setString(1, tfId.getText());
            pst.setString(2, tfNis.getText());
            pst.setString(3, tfNama.getText());
            pst.setString(4, tfBiaya.getText());
            pst.setString(5, tfUang.getText());
            pst.setString(6, tfId.getText());
       
            pst.executeUpdate();
            pst.close();
            JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
                                         
            // Mengubah data dalam row di tabel
            int selectedRow = tbltransaksi.getSelectedRow();
            if (selectedRow >= 0) {
                DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();
                model.setValueAt(tfId.getText(), selectedRow, 0);
                model.setValueAt(tfNis.getText(), selectedRow, 1);
                model.setValueAt(tfNama.getText(), selectedRow, 2);
                model.setValueAt(tfBiaya.getText(), selectedRow, 3);
                model.setValueAt(tfUang.getText(), selectedRow, 4);
               
            // Membersihkan input setelah berhasil mengubah data
            tfId.setText("");
            tfNis.setText("");
            tfNama.setText("");
            tfBiaya.setText("");
            tfUang.setText("");
            tfId.requestFocus();

            }
                } catch (SQLException ex) {
                Logger.getLogger(Pendaftaran.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        //Mengecek pemilihan data
        if (tfId.getText().equals("") || tfNis.getText().equals("") || 
             tfNama.getText().equals("") || tfBiaya.getText().equals("") || tfUang.getText().equals("")   ) {
            JOptionPane.showMessageDialog(null, "Pilih Data Terlebih Dahulu..!",
            "Error", JOptionPane.WARNING_MESSAGE);
         }else{
        //Konfirmasi hapus data
        int ubah = JOptionPane.showConfirmDialog(null, "Anda yakin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (ubah == JOptionPane.YES_OPTION) {
               
         // Menghapus data dalam database
            try {
            pst = con.prepareStatement("DELETE FROM transaksi WHERE idpembayaran=?");
            pst.setString(1, tfId.getText());
            pst.executeUpdate();
            pst.close(); // Menutup PreparedStatement setelah digunakan
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");

            } catch (SQLException ex) {
             Logger.getLogger(Pendaftaran.class.getName()).log(Level.SEVERE, null, ex);
             }
            
            //Menghapus data dalam row
            int getSelectedRowForDeletion = tbltransaksi.getSelectedRow();
            if (getSelectedRowForDeletion >= 0) {
            DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();
            model.removeRow(getSelectedRowForDeletion);
            }
        
            //Membersihkan inputan
            tfId.setText("");
            tfNis.setText("");
            tfNama.setText("");
            tfBiaya.setText("");
            tfUang.setText("");
            tfId.requestFocus();
           }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        tfId.setText("");
        tfNis.setText("");
        tfNama.setText("");
        tfBiaya.setText("");
        tfUang.setText("");
        tfId.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                // Mendapatkan path file yang dipilih
                String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                // Menambahkan ekstensi .txt jika belum ada
                if (!filePath.endsWith(".txt")) {
                    filePath += ".txt";
                }

                // Mendapatkan model tabel
                DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();

                // Menyimpan data tabel ke file
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
                    for (int row = 0; row < model.getRowCount(); row++) {
                    for (int col = 0; col < model.getColumnCount(); col++) {
                    writer.write(model.getValueAt(row, col).toString());
                    writer.write("\t"); // Gunakan tab sebagai pemisah kolom
                        }
                    writer.newLine();
                }
            }

            JOptionPane.showMessageDialog(this, "Data berhasil diexport ke " + filePath, "Export Berhasil", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan file", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                // Mendapatkan path file yang dipilih
                String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                // Membaca data dari file
                try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
                    DefaultTableModel model = (DefaultTableModel) tbltransaksi.getModel();
                    model.setRowCount(0); // Menghapus semua data dalam tabel

                    String line;
                    while ((line = reader.readLine()) != null) {
                        String[] data = line.split("\t"); // Menggunakan tab sebagai pemisah kolom

                    // Menambahkan data ke dalam tabel
                    model.addRow(new Object[]{data[0], data[1], data[2], data[3], data[4]});
                }

                JOptionPane.showMessageDialog(this, "Data berhasil diimport dari " + filePath, "Import Berhasil", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Gagal membaca file", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pembayaran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NAMA;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbltransaksi;
    private javax.swing.JTextField tfBiaya;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNis;
    private javax.swing.JTextField tfUang;
    // End of variables declaration//GEN-END:variables
}
